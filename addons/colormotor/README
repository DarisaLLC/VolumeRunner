Example use of the parameter system, did not check may contain errors....:

class Classy
{
public:
	float val;
	bool b;
	Trigger<bool> trigger; 

	Classy()
	:
	val(0.0f), // default values are the ones set before adding the parameter
	b(false)
	{
		// adds a float param
		params.addFloat("val",&val,0.5 /*min (defaults to 0)*/, 3.0 /*max defaults to 1.0*/);
		// adds a boolean param
		params.addBool("b",&b);
		// adds an event ( uses Trigger<bool> )
		params.addEvent("trigger",trigger); 

		// now to load the params:
		params.loadXmlFile("file.xml");
		// or to save them
		params.saveXmlFile("file.xml");

	}

	void update()
	{
		// poll the event:
		if( trigger.isTriggered() )
			doSomething();


	}


	ParamList params;	
};


// you could easily do a function of this type that creates a gui with the toolkit that you use:
void createGui( const ParamList & params )
{
	for( int i = 0; i < params.getNumParams(); i++ )
	{
		Param * p = params.getParam(i);
		switch( p->getType() )
		{
			case PARAM_FLOAT:
				gui.addSlider(...., pointer to value... );
				break;
		}
	}
}


